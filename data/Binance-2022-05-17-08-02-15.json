{
    "subreddit": "Binance",
    "limit": 1000,
    "minimum_score": -5000,
    "sorting_options": [
        "hot",
        "top",
        "new"
    ],
    "posts": [
        {
            "id": "urhedx",
            "title": "Stacking data on binance API",
            "url": "https://www.reddit.com/r/binance/comments/urhedx/stacking_data_on_binance_api/",
            "author": "Arensis",
            "created_utc": 1652774191.0,
            "score": 3,
            "num_comments": 21,
            "subreddit": "binance",
            "selftext": "I have been looking for a long time for an automated way to read how much of each coin I am stacking both flexible and locked. Until now, the only resource I found was this comment of a guy that prepared this in a moment.\n\n[*https://www.reddit.com/r/binance/comments/k6b1r7/comment/gu21o15/?utm\\_source=share&utm\\_medium=web2x&context=3*](https://www.reddit.com/r/binance/comments/k6b1r7/comment/gu21o15/?utm_source=share&utm_medium=web2x&context=3)\n\nThis code solves the problem of checking flexible stacking, but not locked stacking. To check locked stacking you need a 'projectId' of the product you are stacking, but I didn't found a way to find what 'projectId' are available. Looking today at the API site, i saw that they included new endoints for stacking.\n\n* `New endpoints for Staking:`\n   * `GET /sapi/v1/staking/productListto get Staking product list`\n   * `POST /sapi/v1/staking/purchaseto stake product`\n   * `POST /sapi/v1/staking/redeemto redeem product`\n   * `GET /sapi/v1/staking/positionto get Staking product holding position`\n   * `GET /sapi/v1/staking/stakingRecordto inquiry Staking history records`\n   * `POST /sapi/v1/staking/setAutoStakingto set Auto Staking function`\n   * `GET /sapi/v1/staking/personalLeftQuotato inquiry Staking left quota`\n\nThere is a new endpoint for adquiring info on stacking products, including the 'productId' parameter that would solve the problem of checking locked stacking balances.\n\n[https://binance-docs.github.io/apidocs/spot/en/#staking-endpoints](https://binance-docs.github.io/apidocs/spot/en/#staking-endpoints)\n\nHowever, I have limited coding knowledge, and usually interact with binance with the methods on the python binance library, but these endpoints were not implemented yet. Does anybody know a good resource to learn how to interact with the API?, I couldn't find anything that could help me code a simple function to retrieve stacking product data.",
            "stickied": false,
            "comments": [
                {
                    "id": "i8xel2e",
                    "author": "Arensis",
                    "score": 2,
                    "created_utc": 1652780883.0,
                    "response": "In the end, I figured it myself. You can get stacking project 'projectId' on binance API with this code. You need to introduce your API keys on  binance\\_api\\_key and binance\\_api\\_secret variables.\n\n&#x200B;\n\nThis code builds upon the code in this comment: [https://www.reddit.com/r/binance/comments/k6b1r7/comment/gu21o15/?utm\\_source=share&utm\\_medium=web2x&context=3](https://www.reddit.com/r/binance/comments/k6b1r7/comment/gu21o15/?utm_source=share&utm_medium=web2x&context=3)\n\n&#x200B;\n\nYou can find the code here, I couldn't paste here on the comment keeping a good format.\n\nhttps://pastebin.pl/view/99199eb2\n\n&#x200B;\n\nFor example, if you imput this: `get_product_list(product='STAKING', asset='GRT')`, you get this:\n\n`[{'projectId': 'Grt*120', 'detail': {'asset': 'GRT', 'rewardAsset': 'GRT', 'duration': 120, 'renewable': True, 'apy': '0.0819'}, 'quota': {'totalPersonalQuota': '300', 'minimum': '0.01'}}, {'projectId': 'Grt*30', 'detail': {'asset': 'GRT', 'rewardAsset': 'GRT', 'duration': 30, 'renewable': True, 'apy': '0.0511'}, 'quota': {'totalPersonalQuota': '20000', 'minimum': '1'}}]`\r  \n\n\nIf you don't introduce asset, it will return a number of stacking projects, but not all of them. If you want to have oll of them, you need to call this function several times with each of the coins you are interested in.",
                    "depth": 1,
                    "comments": []
                }
            ]
        }
    ]
}